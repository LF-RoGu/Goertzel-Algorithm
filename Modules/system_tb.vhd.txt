library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity system_tb is
end system_tb;

architecture Behavioral of system_tb is
    -- Constants for the testbench
    constant N_bits   : integer := 20;
    constant input_width : integer := 12;

    -- Testbench signals
    signal clk         : std_logic := '0';
    signal rst         : std_logic := '1';
    signal tb_input    : std_logic_vector(input_width - 1 downto 0) := (others => '0');
    signal magnitude   : std_logic_vector(N_bits - 1 downto 0);
    signal real        : std_logic_vector(N_bits - 1 downto 0);
    signal img         : std_logic_vector(N_bits - 1 downto 0);
    signal ready       : std_logic;

    -- Clock period
    constant clk_period : time := 10 ns;

begin
    -- Instantiate the Unit Under Test (UUT)
    uut: entity work.System
        port map (
            clk       => clk,
            rst       => rst,
            input     => tb_input,
            magnitude => magnitude,
            real_part      => real,
            img_part       => img
        );

    -- Clock generation process
    clk_process : process
    begin
        while true loop
            clk <= '0';
            wait for clk_period / 2;
            clk <= '1';
            wait for clk_period / 2;
        end loop;
    end process;

    -- Test process
    test_process : process
    begin
        -- Initialize inputs
        rst <= '1';
        tb_input <= (others => '0');

        -- Wait for global reset
        wait for 20 ns;
        rst <= '0';

        -- Wait for a few clock cycles
        wait for 20 ns;

        -- Apply a test input and observe outputs
        tb_input <= std_logic_vector(to_unsigned(1023, input_width)); -- Example input value
        wait for 100 ns;

        -- Wait for the processing to complete
        wait until ready = '1';

        -- Print out the result for debugging
        report "Magnitude: " & integer'image(to_integer(signed(magnitude)));

        -- Apply another test input
        rst <= '1'; -- Reset to restart the process
        wait for 20 ns;
        rst <= '0';
        tb_input <= std_logic_vector(to_unsigned(2047, input_width));
        wait for 100 ns;

        -- Wait for the processing to complete
        wait until ready = '1';

        -- Print out the result for debugging
        report "Magnitude: " & integer'image(to_integer(signed(magnitude)));

        -- Apply another test input
        rst <= '1'; -- Reset to restart the process
        wait for 20 ns;
        rst <= '0';
        tb_input <= std_logic_vector(to_unsigned(4095, input_width));
        wait for 100 ns;

        -- Wait for the processing to complete
        wait until ready = '1';

        -- Print out the result for debugging
        report "Magnitude: " & integer'image(to_integer(signed(magnitude)));

        -- End simulation
        wait;
    end process;
end Behavioral;
